// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type CreateFlightRequest struct {
	PlaneNumber string    `json:"planeNumber"`
	FromCity    string    `json:"fromCity"`
	ToCity      string    `json:"toCity"`
	DepTime     time.Time `json:"depTime"`
	ArrTime     time.Time `json:"arrTime"`
}

type Flight struct {
	ID             string    `json:"id"`
	PlaneNumber    string    `json:"planeNumber"`
	AvailableSeats int       `json:"availableSeats"`
	FromCity       string    `json:"fromCity"`
	ToCity         string    `json:"toCity"`
	DepTime        time.Time `json:"depTime"`
	ArrTime        time.Time `json:"arrTime"`
	Status         string    `json:"status"`
}

func (Flight) IsEntity() {}

type FlightFilter struct {
	Time *time.Time `json:"time,omitempty"`
	City *string    `json:"city,omitempty"`
}

type GetFlightsRequest struct {
	Page   int           `json:"page"`
	Limit  int           `json:"limit"`
	Sort   string        `json:"sort"`
	Filter *FlightFilter `json:"filter,omitempty"`
}

type GetFlightsResponse struct {
	Page       int       `json:"page"`
	Limit      int       `json:"limit"`
	Sort       string    `json:"sort"`
	TotalRows  int       `json:"totalRows"`
	TotalPages int       `json:"totalPages"`
	Rows       []*Flight `json:"rows,omitempty"`
}
