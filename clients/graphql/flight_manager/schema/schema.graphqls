type Query {
  getFlights(input: GetFlightsRequest!): GetFlightsResponse!
}

type Mutation {
  createFlight(input: CreateFlightRequest!): Flight!
}

type Flight @key(fields: "id") {
  id: ID!
  planeNumber: String!
  availableSeats: Int!
  fromCity: String!
  toCity: String!
  depTime: Time!
  arrTime: Time!
  status: String!
}

input FlightFilter {
  time: Time
  city: String
}

input GetFlightsRequest {
  page: Int!
  limit: Int!
  sort: String!
  filter: FlightFilter
}

type GetFlightsResponse {
  page: Int!
  limit: Int!
  sort: String!
  totalRows: Int!
  totalPages: Int!
  rows: [Flight!]
}

input CreateFlightRequest {
  planeNumber: String!
  fromCity: String!
  toCity: String!
  depTime: Time!
  arrTime: Time!
}

scalar Time
