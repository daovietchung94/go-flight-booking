package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"
	"go-training/clients/graphql/customer/generated"
	"go-training/clients/graphql/customer/model"
	"go-training/pb"
	"time"
)

// FindCustomerByID is the resolver for the findCustomerByID field.
func (r *entityResolver) FindCustomerByID(ctx context.Context, id string) (*model.Customer, error) {
	pReq := &pb.GetCustomerDetailsRequest{
		Id: id,
	}

	pRes, err := r.MyCustomerClient.GetCustomerDetails(ctx, pReq)
	if err != nil {
		panic(fmt.Errorf(err.Error()))
	}

	dto := &model.Customer{
		ID:          pRes.Id,
		Name:        pRes.Name,
		DateOfBirth: time.Date(int(pRes.DateOfBirth.Year), time.Month(pRes.DateOfBirth.Month), int(pRes.DateOfBirth.Day), 0, 0, 0, 0, time.Local),
		Address:     pRes.Address,
		Email:       pRes.Email,
	}

	return dto, nil
}

// Entity returns generated.EntityResolver implementation.
func (r *Resolver) Entity() generated.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
