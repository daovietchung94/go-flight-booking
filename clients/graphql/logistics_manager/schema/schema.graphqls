extend type Query {
  getPlanes(input: GetPlanesRequest!): GetPlanesResponse!
  getPlaneStatus(input: GetPlaneStatusRequest!): Plane!
}

extend type Mutation {
  createPlane(input: CreatePlaneRequest!): Plane!
  updatePlane(input: UpdatePlaneRequest!): Plane!
  updatePlaneStatus(input: UpdatePlaneStatusRequest!): Plane!
  deletePlane(input: DeletePlaneRequest!): DeletePlaneResponse!
}

type Plane {
  id: ID!
  number: String!
  numOfSeats: Int!
  status: PlaneStatus!
}

input GetPlanesRequest {
  page: Int!
  limit: Int!
  sort: String!
}

type GetPlanesResponse {
  page: Int!
  limit: Int!
  sort: String!
  totalRows: Int!
  totalPages: Int!
  rows: [Plane!]
}

input GetPlaneStatusRequest {
  id: ID!
}

input CreatePlaneRequest {
  number: String!
  numOfSeats: Int!
  status: PlaneStatus!
}

input UpdatePlaneRequest {
  id: ID!
  number: String!
  numOfSeats: Int!
  status: PlaneStatus!
}

input UpdatePlaneStatusRequest {
  id: ID!
  status: PlaneStatus!
}

input DeletePlaneRequest {
  id: ID!
}

type DeletePlaneResponse {
  isDeleted: Boolean!
}

enum PlaneStatus {
  CLEANING,
  REPAIRING,
  READY
}
